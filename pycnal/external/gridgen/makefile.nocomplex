#
# makefile.in - Input makefile for the configure script.
#

SHELL = /bin/sh

#### Start of system configuration section. ####

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
libdir = /usr/local/lib
includedir = ${prefix}/include

INSTALLDIRS =\
$(bindir)\
$(libdir)\
$(includedir)

DISTDIR = ~/pub_web

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644

NOCOMPLEX = yes

CC = gcc
CFLAGS = -g -O2 -Wall
TRIANGLE_CFLAGS = -g -O2 -ffloat-store
LDFLAGS = -L/usr/local/lib

MLIB = -lm

#### end of configuration section ####

SRC =\
broyden.c\
delaunay.c\
geom.c\
gridgen.c\
hash.c\
issimplepoly.c\
istack.c\
ode.c\
swcr.c\
vertlist.c\
zode.c

HEADERS =\
broyden.h\
delaunay.h\
geom.h\
hash.h\
issimplepoly.h\
istack.h\
nan.h\
ode.h\
swcr.h\
version.h\
vertlist.h\
zode.h

OBJS = ${SRC:.c=.o}

ifeq ($(NOCOMPLEX),yes)
  COMPLEXSRC =\
  c99-min/clog.c\
  c99-min/cmplx.c\
  c99-min/stubs.c
endif

.c.o:
	$(CC) -c $(CFLAGS) -I. $*.c -o $*.o

all: $(complex) gridgen

gridgen: triangle.o $(SRC) $(COMPLEXSRC)
	$(CC) -o gridgen $(CFLAGS) $(SRC) $(COMPLEXSRC) triangle.o $(LDFLAGS) $(MLIB)

tests: issimplepoly.c hash.c
	$(CC) -o test_broyden broyden.c -DTEST_BROYDEN $(CFLAGS) -I. $(MLIB)
	$(CC) -o issimplepoly issimplepoly.c -DTEST_SI $(CFLAGS) -I. $(MLIB)
	$(CC) -o test_hash hash.c -DHT_TEST $(CFLAGS) -I. $(MLIB)

standalone: override CFLAGS+=-static
standalone: gridgen tests
	strip gridgen
	strip issimplepoly

triangle.o: triangle.c
	$(CC) -c -DTRILIBRARY $(TRIANGLE_CFLAGS) -I. triangle.c

installdirs:
	$(SHELL) mkinstalldirs $(INSTALLDIRS)

install: all installdirs
	for i in gridgen; do \
	   fname=`basename $$i`; \
	   $(INSTALL_PROGRAM) $$i $(bindir); \
	done

clean:
	rm -f *.o c99-min/*.o gridgen *~ \#*\# core issimplepoly test_broyden test_hash

configclean:
	rm -f config.h makefile config.cache config.status config.log

distclean: clean configclean

indent:
	indent -T FILE -T swcr -T vertnode -T vertlist -T edge -T quadrilateral -T gridspec -T odestruct -T calcstruct -T zdouble -T point -T delaunay -T istack -T triangle -T DIRECTION -T endpoint -T endpointtqueue -T slseg -T segnode -T sweepline  -T DIRECTION -T VISIT -T SIBLING_ORDER -T NODETYPE -T ht_bucket -T hashtable $(SRC) $(HEADERS)
	rm -f *~

dist:
	WDIR=`pwd`;\
	DIR=`basename $$WDIR`;\
	cp -r $$WDIR /tmp;\
	cd /tmp/$$DIR/examples;\
	make clean;\
	cd /tmp/$$DIR;\
	rm -rf `find /tmp/$$DIR -name CVS`;\
	if [ -e makefile ] ; then\
		make distclean;\
	fi;\
	/tmp/"$$DIR"/configure;\
	make standalone;\
	chmod a+r+x gridgen;\
	chmod a+r+x issimplepoly;\
	mv -f gridgen $(DISTDIR);\
	mv -f issimplepoly $(DISTDIR);\
	make distclean;\
	cd $(DISTDIR);\
	mv -f $$DIR".tar.gz" $$DIR".tar.gz.prev";\
	gzip -f gridgen;\
	gzip -f issimplepoly;\
	cd /tmp;\
	tar czvf $$DIR".tar.gz" $$DIR;\
	chmod a+r $$DIR".tar.gz";\
	mv -f $$DIR".tar.gz" $(DISTDIR)/$$DIR".tar.gz";\
	rm -rf $$DIR
