This example represents interpolation of some real-life bathymetry data 
along the shiptrack. 

It is quite tough for interpolation because of the instrumental round-up 
of the position of the ship (resulting in a lot of close/duplicate data 
points and in data points aligned to nodes of a regular grid) and because 
of clustering of data along the track (resulting in a lot of very thin 
triangles).

Early versions if `nn' miserably failed for this data set when interpolating
the raw data, and were dealt with by replacing data in each cell of a 256x256 
subgrid by an averaged value by means of "-d" option of `nnbathy'. The current
version of `nn' is doing much better job; still "-d" option is used because
it speeds up things and because this is the right way to deal with such 
clustered data.

I need to add that `triangle' really shines in this example.

To reproduce the example, run "./test.sh" or "make".
To visualize, in Matlab run "viewexample".
To clean up, run "make clean"

Good luck!
Pavel Sakov
